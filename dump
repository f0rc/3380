--
-- PostgreSQL database dump
--

-- Dumped from database version 15.2 (Debian 15.2-1.pgdg110+1)
-- Dumped by pg_dump version 15.2

SET statement_timeout = 0;
SET lock_timeout = 0;
SET idle_in_transaction_session_timeout = 0;
SET client_encoding = 'UTF8';
SET standard_conforming_strings = on;
SELECT pg_catalog.set_config('search_path', '', false);
SET check_function_bodies = false;
SET xmloption = content;
SET client_min_messages = warning;
SET row_security = off;

--
-- Name: public; Type: SCHEMA; Schema: -; Owner: test
--

-- *not* creating schema, since initdb creates it


ALTER SCHEMA public OWNER TO test;

--
-- Name: SCHEMA public; Type: COMMENT; Schema: -; Owner: test
--

COMMENT ON SCHEMA public IS '';


SET default_tablespace = '';

SET default_table_access_method = heap;

--
-- Name: Clerk; Type: TABLE; Schema: public; Owner: test
--

CREATE TABLE public."Clerk" (
    "ClerkID" text NOT NULL,
    "EmployeeID" text NOT NULL,
    "numberOfPackages" integer NOT NULL,
    revenue integer NOT NULL,
    CONSTRAINT "Clerk_numberOfPackages_check" CHECK (("numberOfPackages" >= 0)),
    CONSTRAINT "Clerk_revenue_check" CHECK ((revenue >= 0))
);


ALTER TABLE public."Clerk" OWNER TO test;

--
-- Name: Company; Type: TABLE; Schema: public; Owner: test
--

CREATE TABLE public."Company" (
    id text NOT NULL,
    "ceo_fistName" character varying(30) NOT NULL,
    "ceo_lastName" character varying(30) NOT NULL,
    ceo_email text NOT NULL,
    "ceo_phoneNumber" integer NOT NULL,
    "CompanyName" text NOT NULL,
    street text NOT NULL,
    street_2 text,
    city text NOT NULL,
    state text NOT NULL,
    "zipCode" integer NOT NULL,
    revenue integer NOT NULL,
    profit integer NOT NULL,
    "createdAt" date NOT NULL,
    "updatedAt" date NOT NULL
);


ALTER TABLE public."Company" OWNER TO test;

--
-- Name: Customers; Type: TABLE; Schema: public; Owner: test
--

CREATE TABLE public."Customers" (
    "customerID" text NOT NULL,
    "firstName" character varying(30) NOT NULL,
    "lastName" character varying(30) NOT NULL,
    street text NOT NULL,
    street_2 text,
    city text NOT NULL,
    state text NOT NULL,
    "zipCode" integer NOT NULL,
    "phoneNumber" integer NOT NULL,
    email text NOT NULL,
    "updatedAt" date NOT NULL,
    "updatedBy" character varying(30) NOT NULL,
    "createdAt" date NOT NULL
);


ALTER TABLE public."Customers" OWNER TO test;

--
-- Name: Dependents; Type: TABLE; Schema: public; Owner: test
--

CREATE TABLE public."Dependents" (
    id text NOT NULL,
    name character varying(255) NOT NULL,
    birthdate date NOT NULL,
    "EmployeeID" text NOT NULL,
    relationship character varying(255) NOT NULL,
    "createdAt" timestamp(3) without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    "updatedAt" timestamp(3) without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE public."Dependents" OWNER TO test;

--
-- Name: Driver; Type: TABLE; Schema: public; Owner: test
--

CREATE TABLE public."Driver" (
    "DriverID" text NOT NULL,
    "EmployeeID" text NOT NULL,
    "TruckID" text NOT NULL,
    "LicenseNumber" character varying(20) NOT NULL
);


ALTER TABLE public."Driver" OWNER TO test;

--
-- Name: Employee; Type: TABLE; Schema: public; Owner: test
--

CREATE TABLE public."Employee" (
    id text NOT NULL,
    "firstName" character varying(30) NOT NULL,
    "lastName" character varying(30) NOT NULL,
    "birthDate" date NOT NULL,
    role text NOT NULL,
    salary integer NOT NULL,
    "add_Street" text NOT NULL,
    "add_Street_2" text,
    "add_City" text NOT NULL,
    "add_State" text NOT NULL,
    "add_ZipCode" integer NOT NULL,
    "startDate" date NOT NULL,
    "createAt" timestamp(3) without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    "createdBy" text NOT NULL,
    "updatedAt" timestamp(3) without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    "updatedBy" text NOT NULL,
    CONSTRAINT "Employee_role_check" CHECK ((role = ANY (ARRAY['Manager'::text, 'Clerk'::text, 'Driver'::text]))),
    CONSTRAINT "Employee_salary_check" CHECK ((salary >= 0))
);


ALTER TABLE public."Employee" OWNER TO test;

--
-- Name: Order; Type: TABLE; Schema: public; Owner: test
--

CREATE TABLE public."Order" (
    "OrderID" text NOT NULL,
    "ProductID" text NOT NULL,
    "Qty" smallint NOT NULL,
    "DateOfPurchase" date DEFAULT CURRENT_DATE NOT NULL
);


ALTER TABLE public."Order" OWNER TO test;

--
-- Name: Package; Type: TABLE; Schema: public; Owner: test
--

CREATE TABLE public."Package" (
    "package_ID" text NOT NULL,
    cost integer NOT NULL,
    sender text NOT NULL,
    receiver text NOT NULL,
    "packageLocationHistory_ID" text NOT NULL,
    "createdAt" date NOT NULL,
    "createdBy" text NOT NULL,
    "updatedAt" date NOT NULL,
    "updatedBy" text NOT NULL
);


ALTER TABLE public."Package" OWNER TO test;

--
-- Name: Package_Location_History; Type: TABLE; Schema: public; Owner: test
--

CREATE TABLE public."Package_Location_History" (
    "locationHistoryID" text NOT NULL,
    "package_ID" text NOT NULL,
    "loction_ID" text NOT NULL,
    status text NOT NULL,
    "createdAt" date NOT NULL,
    CONSTRAINT "Package_Location_History_status_check" CHECK ((status = ANY (ARRAY['Accepted'::text, 'In Transit'::text, 'Out for Delivery'::text, 'Unsuccessful Attempts'::text])))
);


ALTER TABLE public."Package_Location_History" OWNER TO test;

--
-- Name: Post_Office_Loactions; Type: TABLE; Schema: public; Owner: test
--

CREATE TABLE public."Post_Office_Loactions" (
    "location_ID" text NOT NULL,
    "locationName" text NOT NULL,
    street text NOT NULL,
    street_2 text,
    city text NOT NULL,
    state text NOT NULL,
    "zipCode" integer NOT NULL,
    "phoneNumber" integer NOT NULL,
    email text NOT NULL,
    manager text NOT NULL,
    "createdAt" date NOT NULL,
    "createdBy" text NOT NULL,
    "updatedAt" date NOT NULL,
    "updatedBy" text NOT NULL
);


ALTER TABLE public."Post_Office_Loactions" OWNER TO test;

--
-- Name: Product; Type: TABLE; Schema: public; Owner: test
--

CREATE TABLE public."Product" (
    "ProductID" text NOT NULL,
    "ItemName" text NOT NULL,
    "Cost" integer NOT NULL,
    "MSRP" integer NOT NULL
);


ALTER TABLE public."Product" OWNER TO test;

--
-- Name: Sessions; Type: TABLE; Schema: public; Owner: test
--

CREATE TABLE public."Sessions" (
    id text NOT NULL,
    "userId" text NOT NULL,
    "sessionToken" text NOT NULL,
    expires timestamp(3) without time zone NOT NULL
);


ALTER TABLE public."Sessions" OWNER TO test;

--
-- Name: Truck; Type: TABLE; Schema: public; Owner: test
--

CREATE TABLE public."Truck" (
    "truckID" text NOT NULL,
    "truckType" character varying(20) NOT NULL,
    "truckStatus" character varying(20) NOT NULL,
    "truckLocation" text NOT NULL,
    "nextMaintenance" date NOT NULL,
    "createdAt" date NOT NULL,
    "updatedAt" date NOT NULL,
    CONSTRAINT "Truck_truckStatus_check" CHECK ((("truckStatus")::text = ANY ((ARRAY['available'::character varying, 'out'::character varying, 'inactive'::character varying])::text[]))),
    CONSTRAINT "Truck_truckType_check" CHECK ((("truckType")::text = ANY ((ARRAY['llv'::character varying, 'van'::character varying, 'semitruck'::character varying])::text[])))
);


ALTER TABLE public."Truck" OWNER TO test;

--
-- Name: Users; Type: TABLE; Schema: public; Owner: test
--

CREATE TABLE public."Users" (
    id text NOT NULL,
    name character varying(255) NOT NULL,
    email character varying(255) NOT NULL,
    password text NOT NULL,
    "createdAt" timestamp(3) without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    "updatedAt" timestamp(3) without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE public."Users" OWNER TO test;

--
-- Name: Work_For; Type: TABLE; Schema: public; Owner: test
--

CREATE TABLE public."Work_For" (
    "employee_ID" text NOT NULL,
    "location_ID" text NOT NULL,
    hours integer NOT NULL,
    CONSTRAINT check_hours CHECK (((hours > 0) AND (hours < 168)))
);


ALTER TABLE public."Work_For" OWNER TO test;

--
-- Data for Name: Clerk; Type: TABLE DATA; Schema: public; Owner: test
--

COPY public."Clerk" ("ClerkID", "EmployeeID", "numberOfPackages", revenue) FROM stdin;
\.


--
-- Data for Name: Company; Type: TABLE DATA; Schema: public; Owner: test
--

COPY public."Company" (id, "ceo_fistName", "ceo_lastName", ceo_email, "ceo_phoneNumber", "CompanyName", street, street_2, city, state, "zipCode", revenue, profit, "createdAt", "updatedAt") FROM stdin;
\.


--
-- Data for Name: Customers; Type: TABLE DATA; Schema: public; Owner: test
--

COPY public."Customers" ("customerID", "firstName", "lastName", street, street_2, city, state, "zipCode", "phoneNumber", email, "updatedAt", "updatedBy", "createdAt") FROM stdin;
\.


--
-- Data for Name: Dependents; Type: TABLE DATA; Schema: public; Owner: test
--

COPY public."Dependents" (id, name, birthdate, "EmployeeID", relationship, "createdAt", "updatedAt") FROM stdin;
\.


--
-- Data for Name: Driver; Type: TABLE DATA; Schema: public; Owner: test
--

COPY public."Driver" ("DriverID", "EmployeeID", "TruckID", "LicenseNumber") FROM stdin;
\.


--
-- Data for Name: Employee; Type: TABLE DATA; Schema: public; Owner: test
--

COPY public."Employee" (id, "firstName", "lastName", "birthDate", role, salary, "add_Street", "add_Street_2", "add_City", "add_State", "add_ZipCode", "startDate", "createAt", "createdBy", "updatedAt", "updatedBy") FROM stdin;
\.


--
-- Data for Name: Order; Type: TABLE DATA; Schema: public; Owner: test
--

COPY public."Order" ("OrderID", "ProductID", "Qty", "DateOfPurchase") FROM stdin;
\.


--
-- Data for Name: Package; Type: TABLE DATA; Schema: public; Owner: test
--

COPY public."Package" ("package_ID", cost, sender, receiver, "packageLocationHistory_ID", "createdAt", "createdBy", "updatedAt", "updatedBy") FROM stdin;
\.


--
-- Data for Name: Package_Location_History; Type: TABLE DATA; Schema: public; Owner: test
--

COPY public."Package_Location_History" ("locationHistoryID", "package_ID", "loction_ID", status, "createdAt") FROM stdin;
\.


--
-- Data for Name: Post_Office_Loactions; Type: TABLE DATA; Schema: public; Owner: test
--

COPY public."Post_Office_Loactions" ("location_ID", "locationName", street, street_2, city, state, "zipCode", "phoneNumber", email, manager, "createdAt", "createdBy", "updatedAt", "updatedBy") FROM stdin;
\.


--
-- Data for Name: Product; Type: TABLE DATA; Schema: public; Owner: test
--

COPY public."Product" ("ProductID", "ItemName", "Cost", "MSRP") FROM stdin;
\.


--
-- Data for Name: Sessions; Type: TABLE DATA; Schema: public; Owner: test
--

COPY public."Sessions" (id, "userId", "sessionToken", expires) FROM stdin;
\.


--
-- Data for Name: Truck; Type: TABLE DATA; Schema: public; Owner: test
--

COPY public."Truck" ("truckID", "truckType", "truckStatus", "truckLocation", "nextMaintenance", "createdAt", "updatedAt") FROM stdin;
\.


--
-- Data for Name: Users; Type: TABLE DATA; Schema: public; Owner: test
--

COPY public."Users" (id, name, email, password, "createdAt", "updatedAt") FROM stdin;
\.


--
-- Data for Name: Work_For; Type: TABLE DATA; Schema: public; Owner: test
--

COPY public."Work_For" ("employee_ID", "location_ID", hours) FROM stdin;
\.


--
-- Name: Clerk Clerk_pkey; Type: CONSTRAINT; Schema: public; Owner: test
--

ALTER TABLE ONLY public."Clerk"
    ADD CONSTRAINT "Clerk_pkey" PRIMARY KEY ("ClerkID");


--
-- Name: Dependents Dependent_pkey; Type: CONSTRAINT; Schema: public; Owner: test
--

ALTER TABLE ONLY public."Dependents"
    ADD CONSTRAINT "Dependent_pkey" PRIMARY KEY (id);


--
-- Name: Driver Driver_pkey; Type: CONSTRAINT; Schema: public; Owner: test
--

ALTER TABLE ONLY public."Driver"
    ADD CONSTRAINT "Driver_pkey" PRIMARY KEY ("DriverID");


--
-- Name: Employee Employee_pkey; Type: CONSTRAINT; Schema: public; Owner: test
--

ALTER TABLE ONLY public."Employee"
    ADD CONSTRAINT "Employee_pkey" PRIMARY KEY (id);


--
-- Name: Order Order_pkey; Type: CONSTRAINT; Schema: public; Owner: test
--

ALTER TABLE ONLY public."Order"
    ADD CONSTRAINT "Order_pkey" PRIMARY KEY ("OrderID");


--
-- Name: Product ProductID; Type: CONSTRAINT; Schema: public; Owner: test
--

ALTER TABLE ONLY public."Product"
    ADD CONSTRAINT "ProductID" PRIMARY KEY ("ProductID");


--
-- Name: Sessions Session_pkey; Type: CONSTRAINT; Schema: public; Owner: test
--

ALTER TABLE ONLY public."Sessions"
    ADD CONSTRAINT "Session_pkey" PRIMARY KEY (id);


--
-- Name: Truck Truck_pkey; Type: CONSTRAINT; Schema: public; Owner: test
--

ALTER TABLE ONLY public."Truck"
    ADD CONSTRAINT "Truck_pkey" PRIMARY KEY ("truckID");


--
-- Name: Users User_pkey; Type: CONSTRAINT; Schema: public; Owner: test
--

ALTER TABLE ONLY public."Users"
    ADD CONSTRAINT "User_pkey" PRIMARY KEY (id);


--
-- Name: Company company_pkey; Type: CONSTRAINT; Schema: public; Owner: test
--

ALTER TABLE ONLY public."Company"
    ADD CONSTRAINT company_pkey PRIMARY KEY (id);


--
-- Name: Customers customerAccount_pkey; Type: CONSTRAINT; Schema: public; Owner: test
--

ALTER TABLE ONLY public."Customers"
    ADD CONSTRAINT "customerAccount_pkey" PRIMARY KEY ("customerID");


--
-- Name: Package_Location_History locationHistory_pkey; Type: CONSTRAINT; Schema: public; Owner: test
--

ALTER TABLE ONLY public."Package_Location_History"
    ADD CONSTRAINT "locationHistory_pkey" PRIMARY KEY ("locationHistoryID");


--
-- Name: Post_Office_Loactions location_pkey; Type: CONSTRAINT; Schema: public; Owner: test
--

ALTER TABLE ONLY public."Post_Office_Loactions"
    ADD CONSTRAINT location_pkey PRIMARY KEY ("location_ID");


--
-- Name: Package package_pkey; Type: CONSTRAINT; Schema: public; Owner: test
--

ALTER TABLE ONLY public."Package"
    ADD CONSTRAINT package_pkey PRIMARY KEY ("package_ID");


--
-- Name: Work_For workFor_pkey; Type: CONSTRAINT; Schema: public; Owner: test
--

ALTER TABLE ONLY public."Work_For"
    ADD CONSTRAINT "workFor_pkey" PRIMARY KEY ("employee_ID", "location_ID");


--
-- Name: Session_sessionToken_key; Type: INDEX; Schema: public; Owner: test
--

CREATE UNIQUE INDEX "Session_sessionToken_key" ON public."Sessions" USING btree ("sessionToken");


--
-- Name: User_email_key; Type: INDEX; Schema: public; Owner: test
--

CREATE UNIQUE INDEX "User_email_key" ON public."Users" USING btree (email);


--
-- Name: Clerk Clerk_EmployeeID_fkey; Type: FK CONSTRAINT; Schema: public; Owner: test
--

ALTER TABLE ONLY public."Clerk"
    ADD CONSTRAINT "Clerk_EmployeeID_fkey" FOREIGN KEY ("EmployeeID") REFERENCES public."Employee"(id);


--
-- Name: Dependents Dependents_EmployeeID_fkey; Type: FK CONSTRAINT; Schema: public; Owner: test
--

ALTER TABLE ONLY public."Dependents"
    ADD CONSTRAINT "Dependents_EmployeeID_fkey" FOREIGN KEY ("EmployeeID") REFERENCES public."Employee"(id);


--
-- Name: Driver Driver_EmployeeID_fkey; Type: FK CONSTRAINT; Schema: public; Owner: test
--

ALTER TABLE ONLY public."Driver"
    ADD CONSTRAINT "Driver_EmployeeID_fkey" FOREIGN KEY ("EmployeeID") REFERENCES public."Employee"(id);


--
-- Name: Driver Driver_TruckID_fkey; Type: FK CONSTRAINT; Schema: public; Owner: test
--

ALTER TABLE ONLY public."Driver"
    ADD CONSTRAINT "Driver_TruckID_fkey" FOREIGN KEY ("TruckID") REFERENCES public."Truck"("truckID");


--
-- Name: Package_Location_History FK_Package_ID; Type: FK CONSTRAINT; Schema: public; Owner: test
--

ALTER TABLE ONLY public."Package_Location_History"
    ADD CONSTRAINT "FK_Package_ID" FOREIGN KEY ("package_ID") REFERENCES public."Package"("package_ID") ON UPDATE CASCADE ON DELETE CASCADE;


--
-- Name: Post_Office_Loactions FK_PostOffice_Loaction_Manager; Type: FK CONSTRAINT; Schema: public; Owner: test
--

ALTER TABLE ONLY public."Post_Office_Loactions"
    ADD CONSTRAINT "FK_PostOffice_Loaction_Manager" FOREIGN KEY (manager) REFERENCES public."Employee"(id) ON UPDATE CASCADE ON DELETE CASCADE;


--
-- Name: Work_For FK_WorkFor_Employee; Type: FK CONSTRAINT; Schema: public; Owner: test
--

ALTER TABLE ONLY public."Work_For"
    ADD CONSTRAINT "FK_WorkFor_Employee" FOREIGN KEY ("employee_ID") REFERENCES public."Employee"(id) ON UPDATE CASCADE ON DELETE CASCADE;


--
-- Name: Work_For FK_WorkFor_Location; Type: FK CONSTRAINT; Schema: public; Owner: test
--

ALTER TABLE ONLY public."Work_For"
    ADD CONSTRAINT "FK_WorkFor_Location" FOREIGN KEY ("location_ID") REFERENCES public."Post_Office_Loactions"("location_ID") ON UPDATE CASCADE ON DELETE CASCADE;


--
-- Name: Order Order_ProductID_fkey; Type: FK CONSTRAINT; Schema: public; Owner: test
--

ALTER TABLE ONLY public."Order"
    ADD CONSTRAINT "Order_ProductID_fkey" FOREIGN KEY ("ProductID") REFERENCES public."Product"("ProductID");


--
-- Name: Sessions Session_userId_fkey; Type: FK CONSTRAINT; Schema: public; Owner: test
--

ALTER TABLE ONLY public."Sessions"
    ADD CONSTRAINT "Session_userId_fkey" FOREIGN KEY ("userId") REFERENCES public."Users"(id) ON UPDATE CASCADE ON DELETE CASCADE;


--
-- Name: Truck Truck_truckLocation_fkey; Type: FK CONSTRAINT; Schema: public; Owner: test
--

ALTER TABLE ONLY public."Truck"
    ADD CONSTRAINT "Truck_truckLocation_fkey" FOREIGN KEY ("truckLocation") REFERENCES public."Post_Office_Loactions"("location_ID");


--
-- Name: Package package_locationHistory_fkey; Type: FK CONSTRAINT; Schema: public; Owner: test
--

ALTER TABLE ONLY public."Package"
    ADD CONSTRAINT "package_locationHistory_fkey" FOREIGN KEY ("packageLocationHistory_ID") REFERENCES public."Package_Location_History"("locationHistoryID") ON UPDATE CASCADE ON DELETE CASCADE;


--
-- Name: Package package_receiver_fkey; Type: FK CONSTRAINT; Schema: public; Owner: test
--

ALTER TABLE ONLY public."Package"
    ADD CONSTRAINT package_receiver_fkey FOREIGN KEY (receiver) REFERENCES public."Customers"("customerID") ON UPDATE CASCADE ON DELETE CASCADE;


--
-- Name: Package package_sender_fkey; Type: FK CONSTRAINT; Schema: public; Owner: test
--

ALTER TABLE ONLY public."Package"
    ADD CONSTRAINT package_sender_fkey FOREIGN KEY (sender) REFERENCES public."Customers"("customerID") ON UPDATE CASCADE ON DELETE CASCADE;


--
-- Name: SCHEMA public; Type: ACL; Schema: -; Owner: test
--

REVOKE USAGE ON SCHEMA public FROM PUBLIC;


--
-- PostgreSQL database dump complete
--

